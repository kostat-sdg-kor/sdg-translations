# Python CircleCI 2.0 configuration file
version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          key: deps1-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: deps1-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      - run:
          name: Validate the translation data.
          command: make test
  build_data:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          key: deps1-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: deps1-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      - run:
          name: Build the data.
          command: make build_data
      - persist_to_workspace:
          root: ~/repo
          paths:
            - www
  build_site:
    docker:
      - image: circleci/ruby:2.5.1
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ checksum "Gemfile" }}
      - run:
          name: Install Ruby dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle
      - save_cache:
          key: deps1-{{ checksum "Gemfile" }}
          paths:
            - vendor/bundle
      - attach_workspace:
          at: /tmp/data
      - run:
          name: Copy in the built data
          command: cp -r /tmp/data/www/* www/
      - run:
          name: Build the Jekyll site
          command: make build_site
      - persist_to_workspace:
          root: ~/repo
          paths:
            - _site
  deploy:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "cf:b6:38:eb:f2:68:37:dd:6e:49:53:66:ac:c1:40:15"
      - attach_workspace:
          at: /tmp/build
      - run:
          name: Deploy to Github
          command: bash scripts/deploy/deploy.circleci.sh
workflows:
  version: 2
  test:
    jobs:
      - test:
          filters:
            branches:
              ignore: gh-pages
  build-deploy:
    jobs:
      - build_data:
          filters:
            branches:
              only: master
            tags:
              only: /.*/
      - build_site:
          requires:
            - build_data
          filters:
            branches:
              only: master
            tags:
              only: /.*/
      - deploy:
          requires:
            - build_site
          filters:
            branches:
              only: master
            tags:
              only: /.*/